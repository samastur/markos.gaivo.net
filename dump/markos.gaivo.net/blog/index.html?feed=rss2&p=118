<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
		>
<channel>
	<title>Comments on: In search of easy templating</title>
	<atom:link href="http://markos.gaivo.net/blog/?feed=rss2&#038;p=118" rel="self" type="application/rss+xml" />
	<link>http://markos.gaivo.net/blog/?p=118</link>
	<description></description>
	<lastBuildDate>Wed, 16 Jul 2014 16:04:38 +0000</lastBuildDate>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>http://wordpress.org/?v=3.0.5</generator>
	<item>
		<title>By: markos</title>
		<link>http://markos.gaivo.net/blog/?p=118&#038;cpage=1#comment-819</link>
		<dc:creator>markos</dc:creator>
		<pubDate>Wed, 08 Feb 2006 12:48:11 +0000</pubDate>
		<guid isPermaLink="false">http://markos.gaivo.net/blog/?p=118#comment-819</guid>
		<description>Goal: accessible to hobbyists.

XML simply isn&#039;t.</description>
		<content:encoded><![CDATA[<p>Goal: accessible to hobbyists.</p>
<p>XML simply isn&#8217;t.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Jure</title>
		<link>http://markos.gaivo.net/blog/?p=118&#038;cpage=1#comment-818</link>
		<dc:creator>Jure</dc:creator>
		<pubDate>Wed, 08 Feb 2006 12:36:40 +0000</pubDate>
		<guid isPermaLink="false">http://markos.gaivo.net/blog/?p=118#comment-818</guid>
		<description>How about Kid? 

http://kid.lesscode.org/language.html</description>
		<content:encoded><![CDATA[<p>How about Kid? </p>
<p><a href="http://kid.lesscode.org/language.html">http://kid.lesscode.org/language.html</a></p>
]]></content:encoded>
	</item>
	<item>
		<title>By: markos</title>
		<link>http://markos.gaivo.net/blog/?p=118&#038;cpage=1#comment-817</link>
		<dc:creator>markos</dc:creator>
		<pubDate>Wed, 08 Feb 2006 11:52:40 +0000</pubDate>
		<guid isPermaLink="false">http://markos.gaivo.net/blog/?p=118#comment-817</guid>
		<description>Thanks. As I&#039;ve discovered HTMLTemplate is more than forgiving enough, so I&#039;ll go with it for now.</description>
		<content:encoded><![CDATA[<p>Thanks. As I&#8217;ve discovered HTMLTemplate is more than forgiving enough, so I&#8217;ll go with it for now.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: has</title>
		<link>http://markos.gaivo.net/blog/?p=118&#038;cpage=1#comment-812</link>
		<dc:creator>has</dc:creator>
		<pubDate>Tue, 07 Feb 2006 15:20:39 +0000</pubDate>
		<guid isPermaLink="false">http://markos.gaivo.net/blog/?p=118#comment-812</guid>
		<description>&gt; I’ve read the documentation of HTMLTemplate, it looks nice but it says it needs closed tags.

Tags that mark the end of &#039;node&#039; elements have to be explicitly closed. The rest is pretty much a free-for-all.

Technically, you also need to watch for nested tags of the same name, e.g. &#039; ...  ... &#039; would break because what goes up (the nest count) also needs to come down again. But I can&#039;t honestly think of a situation where you could write that without also breaking how your page renders in a browser, so it&#039;s almost certainly a non issue in practice.

&gt; I’m not sure how rigid it is and will need to test it, but I’d like to have something more forgiving, like BeautifulSoup is.

I&#039;d certainly be possible to replace HTMLTemplate&#039;s existing parser with another, more forgiving one, assuming you had one handy. (Mmm, wonder how easily dismantled BS might be?)

Anyway, good luck whatever you do.</description>
		<content:encoded><![CDATA[<p>&gt; I’ve read the documentation of HTMLTemplate, it looks nice but it says it needs closed tags.</p>
<p>Tags that mark the end of &#8216;node&#8217; elements have to be explicitly closed. The rest is pretty much a free-for-all.</p>
<p>Technically, you also need to watch for nested tags of the same name, e.g. &#8216; &#8230;  &#8230; &#8216; would break because what goes up (the nest count) also needs to come down again. But I can&#8217;t honestly think of a situation where you could write that without also breaking how your page renders in a browser, so it&#8217;s almost certainly a non issue in practice.</p>
<p>&gt; I’m not sure how rigid it is and will need to test it, but I’d like to have something more forgiving, like BeautifulSoup is.</p>
<p>I&#8217;d certainly be possible to replace HTMLTemplate&#8217;s existing parser with another, more forgiving one, assuming you had one handy. (Mmm, wonder how easily dismantled BS might be?)</p>
<p>Anyway, good luck whatever you do.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Chris Withers</title>
		<link>http://markos.gaivo.net/blog/?p=118&#038;cpage=1#comment-808</link>
		<dc:creator>Chris Withers</dc:creator>
		<pubDate>Mon, 06 Feb 2006 13:09:20 +0000</pubDate>
		<guid isPermaLink="false">http://markos.gaivo.net/blog/?p=118#comment-808</guid>
		<description>I actually have another variant on the DOM manipulation theme called Twiddler. Drop me a mail if you&#039;re like to see a sample...</description>
		<content:encoded><![CDATA[<p>I actually have another variant on the DOM manipulation theme called Twiddler. Drop me a mail if you&#8217;re like to see a sample&#8230;</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: Chris McDonough</title>
		<link>http://markos.gaivo.net/blog/?p=118&#038;cpage=1#comment-807</link>
		<dc:creator>Chris McDonough</dc:creator>
		<pubDate>Mon, 06 Feb 2006 12:35:08 +0000</pubDate>
		<guid isPermaLink="false">http://markos.gaivo.net/blog/?p=118#comment-807</guid>
		<description>FWIW, although it does require ElementTree, meld3 does implement an HTML parser.  It&#039;s reasonably forgiving.  Don&#039;t know if it&#039;s &quot;forgiving enough&quot; for your requirements though.</description>
		<content:encoded><![CDATA[<p>FWIW, although it does require ElementTree, meld3 does implement an HTML parser.  It&#8217;s reasonably forgiving.  Don&#8217;t know if it&#8217;s &#8220;forgiving enough&#8221; for your requirements though.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: markos</title>
		<link>http://markos.gaivo.net/blog/?p=118&#038;cpage=1#comment-804</link>
		<dc:creator>markos</dc:creator>
		<pubDate>Sun, 05 Feb 2006 17:02:09 +0000</pubDate>
		<guid isPermaLink="false">http://markos.gaivo.net/blog/?p=118#comment-804</guid>
		<description>First tests of HTMLTemplate show it&#039;s not too rigid and doesn&#039;t choke everytime it encounters tags, which are not enclosed. It&#039;s also very fast, so I&#039;ll probably go with it.</description>
		<content:encoded><![CDATA[<p>First tests of HTMLTemplate show it&#8217;s not too rigid and doesn&#8217;t choke everytime it encounters tags, which are not enclosed. It&#8217;s also very fast, so I&#8217;ll probably go with it.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: markos</title>
		<link>http://markos.gaivo.net/blog/?p=118&#038;cpage=1#comment-803</link>
		<dc:creator>markos</dc:creator>
		<pubDate>Sun, 05 Feb 2006 16:01:34 +0000</pubDate>
		<guid isPermaLink="false">http://markos.gaivo.net/blog/?p=118#comment-803</guid>
		<description>I&#039;ve read the documentation of HTMLTemplate, it looks nice but it says it needs closed tags. I&#039;m not sure how rigid it is and will need to test it, but I&#039;d like to have something more forgiving, like BeautifulSoup is.

PyMeld seems heavy on ID&#039;s, but I think it could be useful together with something like BeautifulSoup.

Well, I might write another post if I come up with anything interesting.</description>
		<content:encoded><![CDATA[<p>I&#8217;ve read the documentation of HTMLTemplate, it looks nice but it says it needs closed tags. I&#8217;m not sure how rigid it is and will need to test it, but I&#8217;d like to have something more forgiving, like BeautifulSoup is.</p>
<p>PyMeld seems heavy on ID&#8217;s, but I think it could be useful together with something like BeautifulSoup.</p>
<p>Well, I might write another post if I come up with anything interesting.</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: has</title>
		<link>http://markos.gaivo.net/blog/?p=118&#038;cpage=1#comment-802</link>
		<dc:creator>has</dc:creator>
		<pubDate>Sat, 04 Feb 2006 22:08:22 +0000</pubDate>
		<guid isPermaLink="false">http://markos.gaivo.net/blog/?p=118#comment-802</guid>
		<description>PyMeld is regex-based and quite forgiving of scruffy markup, although it does have performance issues. HTMLTemplate (http://freespace.virgin.net/hamish.sanderson/htmltemplate.html) is also quite tolerant markup-wise (it uses HTMLParser). Some tags still need to be properly closed for the parser to detect where  nodes (&#039;hotspots&#039;) start and end, but you won&#039;t get any more forgiving unless you&#039;re going to base your system on a &#039;real-world&#039; HTML parser like KHTML.

HTH</description>
		<content:encoded><![CDATA[<p>PyMeld is regex-based and quite forgiving of scruffy markup, although it does have performance issues. HTMLTemplate (<a href="http://freespace.virgin.net/hamish.sanderson/htmltemplate.html">http://freespace.virgin.net/hamish.sanderson/htmltemplate.html</a>) is also quite tolerant markup-wise (it uses HTMLParser). Some tags still need to be properly closed for the parser to detect where  nodes (&#8216;hotspots&#8217;) start and end, but you won&#8217;t get any more forgiving unless you&#8217;re going to base your system on a &#8216;real-world&#8217; HTML parser like KHTML.</p>
<p>HTH</p>
]]></content:encoded>
	</item>
	<item>
		<title>By: markos</title>
		<link>http://markos.gaivo.net/blog/?p=118&#038;cpage=1#comment-801</link>
		<dc:creator>markos</dc:creator>
		<pubDate>Sat, 04 Feb 2006 20:13:20 +0000</pubDate>
		<guid isPermaLink="false">http://markos.gaivo.net/blog/?p=118#comment-801</guid>
		<description>Thanks to all for your suggestions.

I failed to mention my need to handle real-world HTML, which  means that all solutions based on ElementTree are not applicable, but I think I&#039;ll be able to use rest to solve my problem without reinventing the wheel.</description>
		<content:encoded><![CDATA[<p>Thanks to all for your suggestions.</p>
<p>I failed to mention my need to handle real-world HTML, which  means that all solutions based on ElementTree are not applicable, but I think I&#8217;ll be able to use rest to solve my problem without reinventing the wheel.</p>
]]></content:encoded>
	</item>
</channel>
</rss>
